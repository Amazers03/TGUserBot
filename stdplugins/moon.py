"""Available Commands:
.moon
.smoon
.tmoon"""
from telethon import events
import asyncio
from collections import deque

@borg.on(events.NewMessage(pattern=r"\.tmoon", outgoing=True))
async def _(event):
    if event.fwd_from:
        return
    deq = deque(list("ğŸŒ—ğŸŒ˜ğŸŒ‘ğŸŒ’ğŸŒ“ğŸŒ”ğŸŒ•ğŸŒ–"))
    for _ in range(32):
        await asyncio.sleep(0.1)
        await event.edit("".join(deq))
        deq.rotate(1)
    

@borg.on(events.NewMessage(pattern=r"\.(.*)", outgoing=True))
async def _(event):
    if event.fwd_from:
        return
    animation_interval = 0.1
    animation_ttl = range(0, 101)
    input_str = event.pattern_match.group(1)
    if input_str == "smoon":
        await event.edit(input_str)
        animation_chars = [
            "ğŸŒ—ğŸŒ—ğŸŒ—ğŸŒ—ğŸŒ—\nğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“\nğŸŒ—ğŸŒ—ğŸŒ—ğŸŒ—ğŸŒ—\nğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“\nğŸŒ—ğŸŒ—ğŸŒ—ğŸŒ—ğŸŒ—",
            "ğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜\nğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”\nğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜\nğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”\nğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜",    
            "ğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘\nğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•\nğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘\nğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•\nğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘",
            "ğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’\nğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–\nğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’\nğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–\nğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’",
            "ğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“\nğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“\nğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“\nğŸŒ—ğŸŒ—ğŸŒ—ğŸŒ—ğŸŒ—\nğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“ğŸŒ“",
            "ğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”\nğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜\nğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”\nğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜ğŸŒ˜\nğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”ğŸŒ”",
            "ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•\nğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘\nğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•\nğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘\nğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•",
            "ğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–\nğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’\nğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–\nğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’ğŸŒ’\nğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–ğŸŒ–"
        ]
        for i in animation_ttl:
            await asyncio.sleep(animation_interval)
            await event.edit(animation_chars[i % 8])

@borg.on(events.NewMessage(pattern=r"\.(.*)", outgoing=True))
async def _(event):
    if event.fwd_from:
        return
    animation_interval = 0.1
    animation_ttl = range(0, 117)
    input_str = event.pattern_match.group(1)
    if input_str == "moon":
        await event.edit(input_str)
        animation_chars = [
            "ğŸŒ—",
            "ğŸŒ˜",    
            "ğŸŒ‘",
            "ğŸŒ’",
            "ğŸŒ“",
            "ğŸŒ”",
            "ğŸŒ•",
            "ğŸŒ–",
            "ğŸŒ—",
            "ğŸŒ˜",    
            "ğŸŒ‘",
            "ğŸŒ’",
            "ğŸŒ“",
            "ğŸŒ”",
            "ğŸŒ•",
            "ğŸŒ–",
            "ğŸŒ—",
            "ğŸŒ˜",    
            "ğŸŒ‘",
            "ğŸŒ’",
            "ğŸŒ“",
            "ğŸŒ”",
            "ğŸŒ•",
            "ğŸŒ–",
            "ğŸŒ—",
            "ğŸŒ˜",    
            "ğŸŒ‘",
            "ğŸŒ’",
            "ğŸŒ“",
            "ğŸŒ”",
            "ğŸŒ•",
            "ğŸŒ–"
        ]
        for i in animation_ttl:
            await asyncio.sleep(animation_interval)
            await event.edit(animation_chars[i % 32])
